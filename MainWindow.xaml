<Window x:Class="cryptoview.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:cryptoview"
        mc:Ignorable="d"
        Title="CryptoView" Height="600" Width="900"
        Background="#0F0F17">
    <Window.Resources>
        <Style x:Key="CyberpunkButton" TargetType="Button">
            <Setter Property="Background" Value="#120458"/>
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="BorderBrush" Value="#00FF9C"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2E0F89"/>
                    <Setter Property="Foreground" Value="#00FFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="#120458"/>
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="BorderBrush" Value="#00FF9C"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="#120458"/>
                        <Setter Property="Foreground" Value="#97FFD9"/>
                        <Setter Property="FontFamily" Value="Consolas"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#2E0F89"/>
                                <Setter Property="Foreground" Value="#00FF9C"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                        Name="ToggleButton" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="false">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Use a TextBlock instead of ContentPresenter for explicit foreground control -->
                                                <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding Path=SelectionBoxItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                            HorizontalAlignment="Left"
                                            Margin="6,2"
                                            VerticalAlignment="Center"
                                            Foreground="#00FF9C"/>
                                                <Path 
                                            Grid.Column="1"
                                            Name="Arrow"
                                            Fill="#00FF9C"
                                            Data="M 0 0 L 4 4 L 8 0 Z"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="#2E0F89"/>
                                                <Setter TargetName="Arrow" Property="Fill" Value="#00FF9C"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Slide">
                                <Grid 
                            Name="DropDown"
                            SnapsToDevicePixels="True"                
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                BorderThickness="1"
                                Background="#121225"
                                BorderBrush="#00FF9C">
                                        <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="true">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#2E0F89"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="#0F0F17"/>
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="BorderBrush" Value="#00FF9C"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#120458"/>
                        <Setter Property="Foreground" Value="#00FFFF"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#1A1A2E"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2E0F89"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border BorderBrush="#00FF9C" BorderThickness="1" Margin="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Title -->
            <TextBlock Text="CRYPTOVIEW" FontSize="32" FontWeight="Bold" Margin="10" HorizontalAlignment="Center">
                <TextBlock.Effect>
                    <DropShadowEffect Color="#00FFFF" BlurRadius="10" ShadowDepth="0"/>
                </TextBlock.Effect>
            </TextBlock>

            <!-- Exchange selection and load button -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,20">
                <TextBlock Text="Select Exchange:" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <ComboBox x:Name="ExchangesComboBox" Width="200" Margin="0,0,10,0"/>
                <Button x:Name="LoadExchangeButton" Content="LOAD DATA" Style="{StaticResource CyberpunkButton}" Click="LoadExchangeButton_Click"/>
            </StackPanel>

            <!-- Data grid for trading pairs -->
            <DataGrid x:Name="PairsDataGrid" Grid.Row="2" Margin="10" AutoGenerateColumns="False" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="BASE" Binding="{Binding Base}" Width="*"/>
                    <DataGridTextColumn Header="QUOTE" Binding="{Binding Quote}" Width="*"/>
                    <DataGridTextColumn Header="PRICE (USD)" Binding="{Binding PriceUsd, StringFormat={}{0:N2}}" Width="*"/>
                    <DataGridTextColumn Header="VOLUME" Binding="{Binding Volume, StringFormat={}{0:N2}}" Width="*"/>
                    <DataGridTextColumn Header="TIME" Binding="{Binding FormattedTime}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Info and status -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="10">
                <TextBlock x:Name="ExchangeInfoTextBlock" Margin="0,0,10,0"/>
                <TextBlock x:Name="StatusTextBlock" HorizontalAlignment="Right" Margin="10,0,0,0"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>

