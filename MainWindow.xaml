<Window x:Class="cryptoview.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:cryptoview"
        mc:Ignorable="d"
        Title="CryptoView Pro" Height="700" Width="1200"
        Background="#0F0F17">
    <Window.Resources>
        <Style x:Key="CyberpunkButton" TargetType="Button">
            <Setter Property="Background" Value="#120458"/>
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="BorderBrush" Value="#00FF9C"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2E0F89"/>
                    <Setter Property="Foreground" Value="#00FFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="SmallCyberpunkButton" TargetType="Button" BasedOn="{StaticResource CyberpunkButton}">
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="FontSize" Value="10"/>
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#120458"/>
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="BorderBrush" Value="#00FF9C"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="#120458"/>
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="BorderBrush" Value="#00FF9C"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="#120458"/>
                        <Setter Property="Foreground" Value="#97FFD9"/>
                        <Setter Property="FontFamily" Value="Consolas"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#2E0F89"/>
                                <Setter Property="Foreground" Value="#00FF9C"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                        Name="ToggleButton" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="false">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding Path=SelectionBoxItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                            HorizontalAlignment="Left"
                                            Margin="6,2"
                                            VerticalAlignment="Center"
                                            Foreground="#00FF9C"/>
                                                <Path 
                                            Grid.Column="1"
                                            Name="Arrow"
                                            Fill="#00FF9C"
                                            Data="M 0 0 L 4 4 L 8 0 Z"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="#2E0F89"/>
                                                <Setter TargetName="Arrow" Property="Fill" Value="#00FF9C"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Slide">
                                <Grid 
                            Name="DropDown"
                            SnapsToDevicePixels="True"                
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                BorderThickness="1"
                                Background="#121225"
                                BorderBrush="#00FF9C">
                                        <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="true">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#2E0F89"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="#0F0F17"/>
            <Setter Property="Foreground" Value="#00FF9C"/>
            <Setter Property="BorderBrush" Value="#00FF9C"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#120458"/>
                        <Setter Property="Foreground" Value="#00FFFF"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#1A1A2E"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2E0F89"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border BorderBrush="#00FF9C" BorderThickness="1" Margin="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Title -->
            <TextBlock Text="CRYPTOVIEW PRO" FontSize="32" FontWeight="Bold" Margin="10" HorizontalAlignment="Center">
                <TextBlock.Effect>
                    <DropShadowEffect Color="#00FFFF" BlurRadius="10" ShadowDepth="0"/>
                </TextBlock.Effect>
            </TextBlock>

            <!-- Exchange selection and controls -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,10">
                <TextBlock Text="Exchange:" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <ComboBox x:Name="ExchangesComboBox" Width="200" Margin="0,0,10,0"/>
                <Button x:Name="LoadExchangeButton" Content="LOAD DATA" Style="{StaticResource CyberpunkButton}" Click="LoadExchangeButton_Click" Margin="0,0,10,0"/>
                <Button x:Name="LoadMoreExchangesButton" Content="ADD EXCHANGES" Style="{StaticResource CyberpunkButton}" Click="LoadMoreExchangesButton_Click" Margin="0,0,10,0"/>
                <Button x:Name="RefreshButton" Content="REFRESH" Style="{StaticResource CyberpunkButton}" Click="RefreshButton_Click" Margin="0,0,10,0"/>
                <CheckBox x:Name="AutoRefreshCheckBox" Content="Auto Refresh" VerticalAlignment="Center" Foreground="#00FF9C" Margin="0,0,10,0" Checked="AutoRefreshCheckBox_Checked" Unchecked="AutoRefreshCheckBox_Unchecked"/>
            </StackPanel>

            <!-- Search and filter controls -->
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,10">
                <TextBlock Text="Search:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <TextBox x:Name="SearchTextBox" Width="150" Margin="0,0,10,0" TextChanged="SearchTextBox_TextChanged"/>
                <CheckBox x:Name="FavoritesOnlyCheckBox" Content="Favorites Only" VerticalAlignment="Center" Foreground="#00FF9C" Margin="0,0,10,0" Checked="FavoritesOnlyCheckBox_Checked" Unchecked="FavoritesOnlyCheckBox_Unchecked"/>
                <Button x:Name="ExportButton" Content="EXPORT" Style="{StaticResource CyberpunkButton}" Click="ExportButton_Click" Margin="0,0,10,0"/>
                <Button x:Name="SettingsButton" Content="SETTINGS" Style="{StaticResource CyberpunkButton}" Click="SettingsButton_Click"/>
            </StackPanel>

            <!-- Progress Bar and Loading Indicator -->
            <Grid Grid.Row="3" Margin="10,0,10,10" Visibility="Collapsed" x:Name="LoadingGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="LoadingStatusTextBlock" Text="Loading..." Grid.Row="0" HorizontalAlignment="Center" Margin="0,0,0,5"/>
                <ProgressBar x:Name="LoadingProgressBar" Grid.Row="1" Height="10" Minimum="0" Maximum="100" Value="0" Background="#1A1A2E" Foreground="#00FF9C" BorderBrush="#00FFFF"/>
            </Grid>

            <!-- Main content area with tabs -->
            <TabControl Grid.Row="4" Margin="10" Background="#0F0F17" BorderBrush="#00FF9C">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Background" Value="#120458"/>
                        <Setter Property="Foreground" Value="#00FF9C"/>
                        <Setter Property="FontFamily" Value="Consolas"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#2E0F89"/>
                                <Setter Property="Foreground" Value="#00FFFF"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TabControl.Resources>

                <!-- Trading Pairs Tab -->
                <TabItem Header="TRADING PAIRS">
                    <DataGrid x:Name="PairsDataGrid" AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="True" SelectionChanged="PairsDataGrid_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="★" Width="30">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="★" Style="{StaticResource SmallCyberpunkButton}" Click="FavoriteButton_Click" Tag="{Binding Symbol}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="BASE" Binding="{Binding Base}" Width="*"/>
                            <DataGridTextColumn Header="QUOTE" Binding="{Binding Quote}" Width="*"/>
                            <DataGridTemplateColumn Header="PRICE (USD)" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding PriceUsd, StringFormat={}{0:N2}}" VerticalAlignment="Center"/>
                                            <TextBlock Text="{Binding PriceChangeIndicator}" Margin="5,0,0,0" VerticalAlignment="Center" FontWeight="Bold">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding PriceChangeIndicator}" Value="▲">
                                                                <Setter Property="Foreground" Value="LightGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding PriceChangeIndicator}" Value="▼">
                                                                <Setter Property="Foreground" Value="LightCoral"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="VOLUME" Binding="{Binding Volume, StringFormat={}{0:N2}}" Width="*"/>
                            <DataGridTextColumn Header="TIME" Binding="{Binding FormattedTime}" Width="*"/>
                            <DataGridTemplateColumn Header="ALERT" Width="60">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="🔔" Style="{StaticResource SmallCyberpunkButton}" Click="AlertButton_Click" Tag="{Binding Symbol}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>

                <!-- Alerts Tab -->
                <TabItem Header="PRICE ALERTS">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
                            <TextBlock Text="Active Alerts:" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="Bold"/>
                            <Button x:Name="ClearAlertsButton" Content="CLEAR ALL" Style="{StaticResource CyberpunkButton}" Click="ClearAlertsButton_Click"/>
                        </StackPanel>
                        
                        <DataGrid x:Name="AlertsDataGrid" Grid.Row="1" Margin="10" AutoGenerateColumns="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="SYMBOL" Binding="{Binding Symbol}" Width="*"/>
                                <DataGridTextColumn Header="TARGET PRICE" Binding="{Binding TargetPrice, StringFormat={}{0:N2}}" Width="*"/>
                                <DataGridTextColumn Header="TYPE" Binding="{Binding Type}" Width="*"/>
                                <DataGridTextColumn Header="CREATED" Binding="{Binding CreatedAt, StringFormat={}{0:yyyy-MM-dd HH:mm}}" Width="*"/>
                                <DataGridTemplateColumn Header="ACTION" Width="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="DELETE" Style="{StaticResource SmallCyberpunkButton}" Click="DeleteAlertButton_Click" Tag="{Binding}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>

                <!-- Favorites Tab -->
                <TabItem Header="FAVORITES">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Grid.Row="0" Text="Favorite Trading Pairs (from all exchanges)" 
                                   Margin="10" FontWeight="Bold" Foreground="#00FFFF"/>
                        
                        <DataGrid x:Name="FavoritesDataGrid" Grid.Row="1" Margin="10" AutoGenerateColumns="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="SYMBOL" Binding="{Binding Symbol}" Width="*"/>
                                <DataGridTextColumn Header="BASE" Binding="{Binding Base}" Width="*"/>
                                <DataGridTextColumn Header="QUOTE" Binding="{Binding Quote}" Width="*"/>
                                <DataGridTextColumn Header="LAST PRICE" Binding="{Binding PriceUsd, StringFormat={}{0:N2}}" Width="*"/>
                                <DataGridTextColumn Header="SAVED FROM" Binding="{Binding FormattedTime}" Width="*"/>
                                <DataGridTemplateColumn Header="REMOVE" Width="80">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="REMOVE" Style="{StaticResource SmallCyberpunkButton}" Click="RemoveFavoriteButton_Click" Tag="{Binding Symbol}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
            </TabControl>

            <!-- Info and status -->
            <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="10">
                <TextBlock x:Name="ExchangeInfoTextBlock" Margin="0,0,10,0"/>
                <TextBlock x:Name="StatusTextBlock" HorizontalAlignment="Right" Margin="10,0,0,0"/>
                <TextBlock x:Name="LastUpdateTextBlock" HorizontalAlignment="Right" Margin="10,0,0,0"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>

